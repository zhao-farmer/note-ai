import{_ as i,c as a,o as n,a0 as t}from"./chunks/framework.DqNHTjo5.js";const E=JSON.parse('{"title":"一、快速入门","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/model/network/modelscope/01.md","filePath":"markdown/model/network/modelscope/01.md"}'),l={name:"markdown/model/network/modelscope/01.md"};function p(e,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="一、快速入门" tabindex="-1">一、快速入门 <a class="header-anchor" href="#一、快速入门" aria-label="Permalink to &quot;一、快速入门&quot;">​</a></h1><p>好的，ModelScope（模型范围）是一个由阿里巴巴牵头推出的​<strong>​开源“模型即服务”（MaaS）共享平台​</strong>​。它汇聚了来自AI业界和顶尖学术界的海量预训练模型，让开发者可以以极低的门槛（通常只需几行代码）下载和使用SOTA（State-of-the-Art）模型。</p><p>你可以把它理解为 ​<strong>​“AI模型的Github”​</strong>​ 或者 ​<strong>​“HuggingFace的中国版”​</strong>​ ，但它更侧重于中文和中国市场场景，并且整合了阿里云的强大算力。</p><h2 id="_1-1-modelscope-的核心优势" tabindex="-1">1.1 ModelScope 的核心优势 <a class="header-anchor" href="#_1-1-modelscope-的核心优势" aria-label="Permalink to &quot;1.1 ModelScope 的核心优势&quot;">​</a></h2><ol><li><p>​<strong>​模型丰富，尤其强于中文场景​</strong>​： 提供了数千个预训练模型，覆盖NLP、CV、语音、多模态等方向，许多模型（如通义千问、CPT等）是针对中文理解和生成优化的。</p></li><li><p>​<strong>​一键使用，降低门槛​</strong>​： 提供了统一的Pipeline API，对于绝大多数模型，你不需要了解其内部复杂结构，只需几行代码就能调用。</p></li><li><p>​<strong>​开源开放​</strong>​： 平台上的模型大多开源，允许你下载、微调（finetune）和部署，而不仅仅是调用API。</p></li><li><p>​<strong>​集成阿里云生态​</strong>​： 可以无缝使用阿里云的DSW（Data Science Workshop）进行在线开发，或使用PAI（Platform of AI）进行模型训练和部署，简化了AI流程。</p></li></ol><h2 id="_1-2-如何使用-modelscope-从入门到进阶" tabindex="-1">1.2 如何使用 ModelScope（从入门到进阶） <a class="header-anchor" href="#_1-2-如何使用-modelscope-从入门到进阶" aria-label="Permalink to &quot;1.2 如何使用 ModelScope（从入门到进阶）&quot;">​</a></h2><h3 id="第一步-安装与环境准备" tabindex="-1">第一步：安装与环境准备 <a class="header-anchor" href="#第一步-安装与环境准备" aria-label="Permalink to &quot;第一步：安装与环境准备&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 使用 pip 安装核心库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modelscope</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 【可选但推荐】根据你的任务方向安装额外的依赖包</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 例如，如果你主要做CV任务，可以安装：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;modelscope[cv]&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果是NLP任务：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;modelscope[nlp]&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html</span></span></code></pre></div><h3 id="第二步-入门-使用-pipeline-快速推理" tabindex="-1">第二步：入门 - 使用 Pipeline 快速推理 <a class="header-anchor" href="#第二步-入门-使用-pipeline-快速推理" aria-label="Permalink to &quot;第二步：入门 - 使用 Pipeline 快速推理&quot;">​</a></h3><p>这是最简单、最常用的方式。你只需要知道模型的名字，就可以像使用一个函数一样调用它。</p><ul><li><p><strong>​示例1：中文自然语言处理（NLP） - 情感分析​</strong>​</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.pipelines </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.utils.constant </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tasks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建情感分析 pipeline</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># model_id 在 ModelScope 官网每个模型页面的标题下方可以找到</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pipe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    task</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Tasks.text_classification, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定任务类型</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;damo/nlp_structbert_sentiment-classification_chinese-base&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定模型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输入中文文本，进行情感分析</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipe(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;这个餐厅的菜很好吃，服务也很棒！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出: {&#39;label&#39;: &#39;positive&#39;, &#39;score&#39;: 0.96...} （积极）</span></span></code></pre></div></li><li><p>​<strong>​示例2：计算机视觉（CV） - 人脸检测​</strong>​</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.pipelines </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.utils.constant </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tasks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建人脸检测 pipeline</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">face_detection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline(Tasks.face_detection, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;damo/cv_ddsar_face-detection_iclr23-damofd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输入可以是图片路径、URL 或 numpy 数组</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> face_detection(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://modelscope.oss-cn-beijing.aliyuncs.com/test/images/face_detection1.jpeg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 结果包含人脸框的位置和置信度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)</span></span></code></pre></div></li><li><p>​<strong>​示例3：语音（Audio） - 语音识别（ASR）​</strong>​</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.pipelines </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.utils.constant </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tasks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建语音识别 pipeline</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    task</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Tasks.auto_speech_recognition,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;damo/speech_paraformer-large_asr_nat-zh-cn-16k-common-vocab8404-pytorch&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输入音频文件路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://modelscope.oss-cn-beijing.aliyuncs.com/test/audios/asr_example.wav&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印识别出的文本</span></span></code></pre></div></li></ul><h3 id="第三步-进阶-下载模型并进行微调-finetune" tabindex="-1">第三步：进阶 - 下载模型并进行微调（Finetune） <a class="header-anchor" href="#第三步-进阶-下载模型并进行微调-finetune" aria-label="Permalink to &quot;第三步：进阶 - 下载模型并进行微调（Finetune）&quot;">​</a></h3><p>如果你有自己的数据集，并想用预训练模型作为基础进行微调，ModelScope 也提供了标准化的流程。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Model</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.trainers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build_trainer</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.msdatasets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MsDataset</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelscope.utils.hub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> read_config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 加载数据集（以情感分析为例，你需要准备自己的数据集）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 官方也提供很多数据集，格式通常为 json 或 csv</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MsDataset.load(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你的自定义情感分析数据集名称&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">namespace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你的用户名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 加载预训练模型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Model.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;damo/nlp_structbert_sentiment-classification_chinese-base&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 读取并修改模型的配置文件（例如指定分类数目、学习率等）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cfg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> read_config(model.model_dir)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cfg.preprocessor.first_sequence </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;text&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定输入文本的字段名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cfg.train.max_epochs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 设置训练轮数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... 其他超参数配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. 构建训练器并开始训练</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">trainer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build_trainer(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    default_args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;model&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: model, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cfg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: cfg, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dataset&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ds, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;train_batch_size&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">trainer.train()</span></span></code></pre></div><h3 id="第四步-探索与发现模型" tabindex="-1">第四步：探索与发现模型 <a class="header-anchor" href="#第四步-探索与发现模型" aria-label="Permalink to &quot;第四步：探索与发现模型&quot;">​</a></h3><p>最好的方式就是去 ​<strong>​ModelScope 官网​</strong>​ 探索：</p><ol><li><p>​<strong>​访问官网​</strong>​：<a href="https://modelscope.cn" target="_blank" rel="noreferrer">https://modelscope.cn</a></p></li><li><p>​<strong>​按任务筛选​</strong>​：在首页或模型库页面，你可以按照任务（如“文本分类”、“图像生成”、“语音识别”）筛选你感兴趣的模型。</p></li><li><p>​<strong>​查看模型卡片​</strong>​：点击进入任意模型，你会看到：</p><ul><li><p>​<strong>​模型介绍​</strong>​：模型是做什么的、性能如何。</p></li><li><p>​<strong>​模型文件​</strong>​：可以下载的原始文件。</p></li><li><p>​<strong>​在线体验​</strong>​：直接在网页上试用模型效果。</p></li><li><p>​<strong>​代码范例​</strong>​：最重要的部分，直接提供调用该模型的示例代码，复制粘贴就能用。</p></li></ul></li></ol><h2 id="_1-3-总结-常用命令与概念" tabindex="-1">1.3 总结：常用命令与概念 <a class="header-anchor" href="#_1-3-总结-常用命令与概念" aria-label="Permalink to &quot;1.3 总结：常用命令与概念&quot;">​</a></h2><table tabindex="0"><thead><tr><th>操作</th><th>代码/命令</th><th>说明</th></tr></thead><tbody><tr><td>​<strong>​安装​</strong>​</td><td><code>pip install modelscope</code></td><td>安装核心库</td></tr><tr><td>​<strong>​导入Pipeline​</strong>​</td><td><code>from modelscope.pipelines import pipeline</code></td><td>导入核心工具</td></tr><tr><td>​<strong>​创建Pipeline​</strong>​</td><td><code>pipeline(task=Tasks.[任务名], model=&#39;模型ID&#39;)</code></td><td>实例化一个模型管道</td></tr><tr><td>​<strong>​执行推理​</strong>​</td><td><code>result = pipe(你的输入数据)</code></td><td>得到预测结果</td></tr><tr><td>​<strong>​下载数据集​</strong>​</td><td><code>MsDataset.load(&#39;数据集名&#39;)</code></td><td>加载平台或自定义数据集</td></tr><tr><td>​<strong>​加载模型​</strong>​</td><td><code>Model.from_pretrained(&#39;模型ID&#39;)</code></td><td>下载并加载模型结构</td></tr><tr><td>​<strong>​官网探索​</strong>​</td><td><a href="https://modelscope.cn" target="_blank" rel="noreferrer">https://modelscope.cn</a></td><td>查找模型和代码范例的最终去处</td></tr></tbody></table><p>​<strong>​给你的建议：​</strong>​</p><ol><li><p>​<strong>​从官网的“在线体验”开始​</strong>​，直观感受模型能力。</p></li><li><p>​<strong>​复制“代码范例”到你的本地Jupyter Notebook运行​</strong>​，这是最快上手的方式。</p></li><li><p>当你熟悉基本调用后，再考虑​<strong>​下载模型到本地​</strong>​和​<strong>​微调​</strong>​的需求。</p></li></ol><p>ModelScope 极大地简化了AI模型的应用流程，是每一位中国AI开发者都应该了解和掌握的工具。</p>`,22)]))}const g=i(l,[["render",p]]);export{E as __pageData,g as default};
