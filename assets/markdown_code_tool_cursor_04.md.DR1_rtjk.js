import{_ as i,C as c,c as o,o as a,j as n,b as t,a0 as r,a as p,w as l,G as d,a1 as h}from"./chunks/framework.DqNHTjo5.js";const m="/note-ai/code/tool/cursor/045.png",u="/note-ai/code/tool/cursor/046.png",g="/note-ai/code/tool/cursor/047.png",b="/note-ai/code/tool/cursor/048.png",k="/note-ai/code/tool/cursor/049.png",_="/note-ai/code/tool/cursor/050.png",P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/code/tool/cursor/04.md","filePath":"markdown/code/tool/cursor/04.md"}'),v={name:"markdown/code/tool/cursor/04.md"};function C(y,s,x,f,A,B){const e=c("Mermaid");return a(),o("div",null,[s[1]||(s[1]=n("h2",{id:"五、cursor智能插件开发实战",tabindex:"-1"},[p("五、Cursor智能插件开发实战 "),n("a",{class:"header-anchor",href:"#五、cursor智能插件开发实战","aria-label":'Permalink to "五、Cursor智能插件开发实战"'},"​")],-1)),s[2]||(s[2]=n("p",null,"Cursor官网开发指导流程：",-1)),(a(),t(h,null,{default:l(()=>[d(e,{id:"mermaid-6",class:"mermaid",graph:"graph%20LR%3B%0A%20%20%20%20A1%5BProject%5D--%3EB%5BDesign%5D%3B%0A%20%20%20%20B--%3EC%5BCode%5D%3B%0A%20%20%20%20C--Test--%3ED%5BVerify%5D%3B%0A%20%20%20%20D--Feedback--%3EC%3B%0A"})]),fallback:l(()=>s[0]||(s[0]=[p(" Loading... ")])),_:1})),s[3]||(s[3]=r(`<h3 id="_5-1-cursor设计chrome浏览器插件" tabindex="-1">5.1 Cursor设计Chrome浏览器插件 <a class="header-anchor" href="#_5-1-cursor设计chrome浏览器插件" aria-label="Permalink to &quot;5.1 Cursor设计Chrome浏览器插件&quot;">​</a></h3><ol><li><p>需求设计</p><p>创建：01_chrome插件需求和要求说明</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>实现一款Chrome的插件，要包含下面三个功能：</span></span>
<span class="line"><span>   1. 解释选中的段落或者关键词</span></span>
<span class="line"><span>   2. 翻译选中的段落或者关键词（支持中文和英文翻译即可）</span></span>
<span class="line"><span>   3. 朗读选中的段落或者关键字（支持中文和英文朗读）</span></span>
<span class="line"><span>   4. 润色和替换选中的文本文案</span></span>
<span class="line"><span>细节要求：</span></span>
<span class="line"><span>   1. 当选中段落或者关键词时，出现插件，直接悬浮在选中关键词和段落上！（显示顺序：解释，翻译，朗读，润色）</span></span>
<span class="line"><span>   2. 解释，翻译，润色的结果直接在悬浮下方出现结果即可</span></span>
<span class="line"><span>   3. 翻译添加语言选择（翻译目标： 中文还是英文）</span></span>
<span class="line"><span>   4. 润色结果可以进行修改，同时提供一键替换功能，替换目标文案内容（可编辑情况下可以直接替换）！</span></span>
<span class="line"><span>   5. 翻译、解释、润色功能实用kimi的api实现即可，具体参考配置kimi api文档</span></span>
<span class="line"><span>   6. 朗读直接调用chrome浏览器内置插件即可（提供中文和英文朗读）</span></span>
<span class="line"><span>   7. 并且帮我们写好readme文档，写清在chrome部署插件的过程</span></span></code></pre></div><p><code>https://platform.moonshot.cn/docs</code></p></li><li><p>设计和生成项目ui图文本</p><p>chat agent模式对话：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@01_chrome插件需求和要求说明 根据插件需求文档，帮我写一份项目的UI文本设计图，将设计图写到 02_chrome插件UI设计图 文件中！ 要求页面简洁，清晰！</span></span></code></pre></div><p>生成 02_chrome插件UI设计图</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Chrome插件UI设计文档</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 1. 悬浮菜单设计</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 1.1 基础悬浮菜单</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     功能按钮组         |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [解释] [翻译] [朗读] [润色] |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 1.2 功能展示区域</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     功能按钮组         |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [解释] [翻译] [朗读] [润色] |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     结果展示区域        |</span></span>
<span class="line"><span>|                        |</span></span>
<span class="line"><span>|                        |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 2. 各功能界面设计</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 2.1 解释功能</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     功能按钮组         |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [解释] [翻译] [朗读] [润色] |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     解释结果           |</span></span>
<span class="line"><span>| 选中的文本解释内容...    |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 2.2 翻译功能</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     功能按钮组         |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [解释] [翻译] [朗读] [润色] |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| 目标语言: [中文 ▼]      |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     翻译结果           |</span></span>
<span class="line"><span>| 翻译后的文本内容...      |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 2.3 朗读功能</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     功能按钮组         |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [解释] [翻译] [朗读] [润色] |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| 朗读语言: [中文 ▼]      |</span></span>
<span class="line"><span>| [▶ 开始朗读] [■ 停止]   |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 2.4 润色功能</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     功能按钮组         |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [解释] [翻译] [朗读] [润色] |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>|     润色结果           |</span></span>
<span class="line"><span>| 润色后的文本内容...      |</span></span>
<span class="line"><span>|                        |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>| [编辑] [替换原文]       |</span></span>
<span class="line"><span>+------------------------+</span></span>
<span class="line"><span>​\`\`\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 3. 设计规范</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 3.1 颜色方案</span></span>
<span class="line"><span>- 主色调：#4A90E2（蓝色）</span></span>
<span class="line"><span>- 背景色：#FFFFFF（白色）</span></span>
<span class="line"><span>- 文字颜色：#333333（深灰）</span></span>
<span class="line"><span>- 边框颜色：#E5E5E5（浅灰）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 3.2 字体规范</span></span>
<span class="line"><span>- 主字体：系统默认字体</span></span>
<span class="line"><span>- 标题：14px</span></span>
<span class="line"><span>- 正文：12px</span></span>
<span class="line"><span>- 按钮文字：12px</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 3.3 间距规范</span></span>
<span class="line"><span>- 内边距：8px</span></span>
<span class="line"><span>- 按钮间距：4px</span></span>
<span class="line"><span>- 功能区间距：12px</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 3.4 交互规范</span></span>
<span class="line"><span>1. 选中文本后，悬浮菜单自动显示在选中文本附近</span></span>
<span class="line"><span>2. 点击功能按钮后，结果区域自动展开</span></span>
<span class="line"><span>3. 鼠标移出悬浮菜单区域，菜单自动隐藏</span></span>
<span class="line"><span>4. 所有按钮hover效果：背景色变浅</span></span>
<span class="line"><span>5. 编辑区域支持直接修改，替换按钮一键替换原文</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 4. 响应式设计</span></span>
<span class="line"><span>- 悬浮菜单宽度：最小200px，最大400px</span></span>
<span class="line"><span>- 高度自适应内容</span></span>
<span class="line"><span>- 确保在各种屏幕分辨率下都能正常显示</span></span></code></pre></div></li><li><p>配置和导入kimi docs文档</p><p>配置位置： cursor settings &gt; Features &gt; Docs &gt; add new doc</p><p><img src="`+m+'" alt="" data-fancybox="gallery"></p></li><li><p>生成kimi api key</p><p>登录kimi api 用户中心： <code>https://platform.moonshot.cn/console/api-keys</code></p><p>创建kimi api key (第一次赠送15元)：</p><p><img src="'+u+'" alt="" data-fancybox="gallery"></p></li></ol><h3 id="_5-2-chrome插件实现" tabindex="-1">5.2 Chrome插件实现 <a class="header-anchor" href="#_5-2-chrome插件实现" aria-label="Permalink to &quot;5.2 Chrome插件实现&quot;">​</a></h3><ol><li><p>准备一个参考界面（参考豆包）</p><p><img src="'+g+`" alt="" data-fancybox="gallery"></p></li><li><p>实现插件功能</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@01_chrome插件需求和要求说明 @02_chrome插件UI设计图   基于需求和UI设计图，以及参考 @doubaoui.png 图片风格，直接在当前chrome-plugin文件夹下实现插件功能，同时提取单独配置文件用于填写kimi api url和key的位置！代码添加中文注释，实现后再次自检查，确保插件正常运行和实现功能！</span></span></code></pre></div></li><li><p>配置kimi api key</p><div class="language-config.js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">config.js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// API配置</span></span>
<span class="line"><span>const config = {</span></span>
<span class="line"><span>    // Kimi API配置</span></span>
<span class="line"><span>    kimi: {</span></span>
<span class="line"><span>        apiUrl: &#39;https://api.moonshot.cn/v1&#39;, // 替换为实际的Kimi API URL</span></span>
<span class="line"><span>        apiKey: &#39;YOUR_KIMI_API_KEY&#39;  // 替换为实际的Kimi API Key</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    // 默认设置</span></span>
<span class="line"><span>    defaults: {</span></span>
<span class="line"><span>        translationTarget: &#39;zh&#39;, // 默认翻译目标语言：zh-中文，en-英文</span></span>
<span class="line"><span>        speechLanguage: &#39;zh&#39;    // 默认朗读语言：zh-中文，en-英文</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 导出配置</span></span>
<span class="line"><span>export default config;</span></span></code></pre></div></li></ol><h3 id="_5-3-chrome插件调试和发布" tabindex="-1">5.3 Chrome插件调试和发布 <a class="header-anchor" href="#_5-3-chrome插件调试和发布" aria-label="Permalink to &quot;5.3 Chrome插件调试和发布&quot;">​</a></h3><ol><li><p>第一次回出现问题（使用cursor调试）</p><p><img src="`+b+'" alt="" data-fancybox="gallery"></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>将插件文件夹发布到chrome浏览器，报图片的错误，你给我从网上查找几张图片放在对应的位置即可！</span></span></code></pre></div><p>很大概率，cursor不给我们生成缺少的图片，安全原因，那么就需要我们自己手动添加！！</p></li><li><p>有错误信息显示</p><p>Uncaught SyntaxError: Cannot use import statement outside a module</p><p><img src="'+k+'" alt="" data-fancybox="gallery"></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Uncaught SyntaxError: Cannot use import statement outside a module 解决错误信息！</span></span></code></pre></div></li><li><p>确保添加完成</p><p><img src="'+_+'" alt="" data-fancybox="gallery"></p></li><li><p>测试功能和调试</p></li><li><p>实现和测试</p></li></ol>',6))])}const E=i(v,[["render",C]]);export{P as __pageData,E as default};
